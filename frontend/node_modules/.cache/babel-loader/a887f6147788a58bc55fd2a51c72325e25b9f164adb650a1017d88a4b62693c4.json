{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivalz\\\\OneDrive\\\\Documentos\\\\topic-discovert-cs-app\\\\frontend\\\\src\\\\components\\\\Tweet.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React, { useEffect, useState } from 'react';\nimport SelectComponent from './SelectComponent';\nimport createChart from './createChart';\n// import {Link} from 'react-router-dom';\n//src=\"https://cdn.jsdelivr.net/npm/chart.js\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tweet() {\n  _s();\n  /*  const options = [ \r\n       {key: 1, value: \"Test 1\"},\r\n       {key: 2, value: \"Test 2\"},\r\n       {key: 3, value: \"Test 3\"}\r\n   ]; */\n\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  //const [selectedTopic, setSelectedTopic] = useState(\"\"); //new\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const fetchItems = async () => {\n    const data = await fetch('/courses');\n    const items = await data.json();\n    setItems(items);\n  };\n  const options = items.map(item => {\n    return {\n      key: item._id,\n      value: item.CourseID\n      //topic: item.topic_1, //new\n      //probability: item.probability_1 //new\n    };\n  });\n\n  //console.log(\"HELLO\")\n\n  /*         <section>\r\n              <div> \r\n                  <SelectComponent\r\n                      options = {options}\r\n                      onChange = {(item) => setSelectedOption(item)}\r\n                      selectedKey={selectedOption}\r\n                      placeholder={\"type to search\"}\r\n                  />\r\n                  <p className=\"sel-option\"> Selected option: {selectedOption}</p>\r\n              </div>\r\n              \r\n              test\r\n              {fetchItems.items}\r\n              \r\n              <div className=\"courses-map\">\r\n                  <p>Course name: {options.CourseID}</p>\r\n                  <p>Course id: {options.courseName}</p>\r\n                  <p>Topic/Probability: {options.topic}</p>\r\n              </div>\r\n      \r\n              \r\n          </section>   */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"courses-map\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Course name: \", options.CourseID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Course id: \", options.courseName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Topic/Probability: \", options.topic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Tweet, \"tx/xhZs9p5uGw1pE8UYZ6IWCtxI=\");\n_c = Tweet;\nexport default Tweet;\nvar _c;\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"names":["React","useEffect","useState","SelectComponent","createChart","jsxDEV","_jsxDEV","Tweet","_s","selectedOption","setSelectedOption","items","setItems","fetchItems","data","fetch","json","options","map","item","key","_id","value","CourseID","className","children","fileName","_jsxFileName","lineNumber","columnNumber","courseName","topic","_c","$RefreshReg$"],"sources":["C:/Users/ivalz/OneDrive/Documentos/topic-discovert-cs-app/frontend/src/components/Tweet.js"],"sourcesContent":["import '../App.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport SelectComponent from './SelectComponent';\r\nimport createChart from './createChart';\r\n// import {Link} from 'react-router-dom';\r\n//src=\"https://cdn.jsdelivr.net/npm/chart.js\"\r\n\r\nfunction Tweet() {\r\n\r\n\r\n   /*  const options = [ \r\n        {key: 1, value: \"Test 1\"},\r\n        {key: 2, value: \"Test 2\"},\r\n        {key: 3, value: \"Test 3\"}\r\n    ]; */\r\n\r\n    const [selectedOption, setSelectedOption] = useState(\"\");\r\n    //const [selectedTopic, setSelectedTopic] = useState(\"\"); //new\r\n    const [items, setItems] = useState([]);\r\n\r\n\r\n    useEffect( () => {\r\n        fetchItems();\r\n    }, []);\r\n\r\n    \r\n\r\n    const fetchItems = async () => {\r\n        const data = await fetch('/courses');\r\n        const items = await data.json();\r\n        setItems(items);\r\n    };\r\n\r\n    const options = items.map(item => {\r\n        return {\r\n            key: item._id,\r\n            value: item.CourseID\r\n            //topic: item.topic_1, //new\r\n            //probability: item.probability_1 //new\r\n        }\r\n    });\r\n\r\n    //console.log(\"HELLO\")\r\n\r\n\r\n\r\n/*         <section>\r\n            <div> \r\n                <SelectComponent\r\n                    options = {options}\r\n                    onChange = {(item) => setSelectedOption(item)}\r\n                    selectedKey={selectedOption}\r\n                    placeholder={\"type to search\"}\r\n                />\r\n                <p className=\"sel-option\"> Selected option: {selectedOption}</p>\r\n            </div>\r\n            \r\n            test\r\n            {fetchItems.items}\r\n            \r\n            <div className=\"courses-map\">\r\n                <p>Course name: {options.CourseID}</p>\r\n                <p>Course id: {options.courseName}</p>\r\n                <p>Topic/Probability: {options.topic}</p>\r\n            </div>\r\n    \r\n            \r\n        </section>   */   \r\n        \r\n\r\n   \r\n          \r\n    return(\r\n        <div \r\n            className=\"courses-map\">\r\n            <p>Course name: {options.CourseID}</p>\r\n            <p>Course id: {options.courseName}</p>\r\n            <p>Topic/Probability: {options.topic}</p>\r\n        </div>    \r\n    \r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Tweet;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAGd;AACH;AACA;AACA;AACA;;EAEI,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD;EACA,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAGtCD,SAAS,CAAE,MAAM;IACbY,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,UAAU,CAAC;IACpC,MAAMJ,KAAK,GAAG,MAAMG,IAAI,CAACE,IAAI,CAAC,CAAC;IAC/BJ,QAAQ,CAACD,KAAK,CAAC;EACnB,CAAC;EAED,MAAMM,OAAO,GAAGN,KAAK,CAACO,GAAG,CAACC,IAAI,IAAI;IAC9B,OAAO;MACHC,GAAG,EAAED,IAAI,CAACE,GAAG;MACbC,KAAK,EAAEH,IAAI,CAACI;MACZ;MACA;IACJ,CAAC;EACL,CAAC,CAAC;;EAEF;;EAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKI,oBACIjB,OAAA;IACIkB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACvBnB,OAAA;MAAAmB,QAAA,GAAG,eAAa,EAACR,OAAO,CAACM,QAAQ;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCvB,OAAA;MAAAmB,QAAA,GAAG,aAAW,EAACR,OAAO,CAACa,UAAU;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCvB,OAAA;MAAAmB,QAAA,GAAG,qBAAmB,EAACR,OAAO,CAACc,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAGd;AAACrB,EAAA,CA1EQD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA8Ed,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}