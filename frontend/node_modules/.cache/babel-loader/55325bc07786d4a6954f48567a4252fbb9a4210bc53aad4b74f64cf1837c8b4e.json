{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivalz\\\\OneDrive\\\\Documentos\\\\topic-discovert-cs-app\\\\frontend\\\\src\\\\components\\\\Tweet.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React, { useEffect, useState } from 'react';\nimport SelectComponent from './SelectComponent';\n// import {Link} from 'react-router-dom';\n//src=\"https://cdn.jsdelivr.net/npm/chart.js\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tweet() {\n  _s();\n  /*  const options = [ \r\n       {key: 1, value: \"Test 1\"},\r\n       {key: 2, value: \"Test 2\"},\r\n       {key: 3, value: \"Test 3\"}\r\n   ]; */\n\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  //const [selectedTopic, setSelectedTopic] = useState(\"\"); //new\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const fetchItems = async () => {\n    const data = await fetch('/courses');\n    const items = await data.json();\n    setItems(items);\n  };\n  const options = items.map(item => {\n    return {\n      key: item._id,\n      value: item.CourseID\n      //topic: item.topic_1, //new\n      //probability: item.probability_1 //new\n    };\n  });\n\n  //console.log(\"HELLO\")\n\n  /*  {\r\n       items.map(item => (\r\n           <div className=\"courses-map\">\r\n               <p>Course name: {item.CourseID}</p>\r\n               <p>Course id: {item.courseName}</p>\r\n               <p>Topic/Probability: {item.topic}</p>\r\n           </div>\r\n       ))\r\n       } */\n\n  /*         <section>\r\n              <div> \r\n                  <SelectComponent\r\n                      options = {options}\r\n                      onChange = {(item) => setSelectedOption(item)}\r\n                      selectedKey={selectedOption}\r\n                      placeholder={\"type to search\"}\r\n                  />\r\n                  <p className=\"sel-option\"> Selected option: {selectedOption}</p>\r\n              </div>\r\n              \r\n              test\r\n              {fetchItems.items}\r\n              \r\n              <div className=\"courses-map\">\r\n                  <p>Course name: {options.CourseID}</p>\r\n                  <p>Course id: {options.courseName}</p>\r\n                  <p>Topic/Probability: {options.topic}</p>\r\n              </div>\r\n      \r\n              \r\n          </section>   */\n\n  src = \"https://cdn.jsdelivr.net/npm/chart.js\";\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n  async function sleepyWork() {\n    console.log(\"I'm going to sleep for 1 second.\");\n    await sleep(1000);\n    console.log('I woke up after 1 second.');\n    pet = document.getElementById('pet-select').value;\n    console.log(\"Pet selected: \" + pet);\n    data[0] = 4;\n    chart.update();\n  }\n  const ctx = document.getElementById('myChart');\n  const data = [20, 19, 3, 5, 2, 3];\n\n  //sleepyWork(); // Test\n\n  chart = new Chart(ctx, {\n    type: 'radar',\n    data: {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [{\n        label: '# of Votes',\n        data: data,\n        borderWidth: 1\n      }]\n    },\n    options: {\n      responsive: true,\n      plugins: {\n        title: {\n          display: true,\n          text: 'Chart.js Radar Chart'\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [\"MA SUPER PAGE WEB\", /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"pet-select\",\n      onchange: \"sleepyWork()\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Please choose an option--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"dog\",\n        children: \"Dog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cat\",\n        children: \"Cat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hamster\",\n        children: \"Hamster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"parrot\",\n        children: \"Parrot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"spider\",\n        children: \"Spider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"goldfish\",\n        children: \"Goldfish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n_s(Tweet, \"tx/xhZs9p5uGw1pE8UYZ6IWCtxI=\");\n_c = Tweet;\nexport default Tweet;\nvar _c;\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"names":["React","useEffect","useState","SelectComponent","jsxDEV","_jsxDEV","Tweet","_s","selectedOption","setSelectedOption","items","setItems","fetchItems","data","fetch","json","options","map","item","key","_id","value","CourseID","src","sleep","ms","Promise","resolve","setTimeout","sleepyWork","console","log","pet","document","getElementById","chart","update","ctx","Chart","type","labels","datasets","label","borderWidth","responsive","plugins","title","display","text","children","id","onchange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ivalz/OneDrive/Documentos/topic-discovert-cs-app/frontend/src/components/Tweet.js"],"sourcesContent":["import '../App.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport SelectComponent from './SelectComponent';\r\n// import {Link} from 'react-router-dom';\r\n//src=\"https://cdn.jsdelivr.net/npm/chart.js\"\r\n\r\nfunction Tweet() {\r\n\r\n\r\n   /*  const options = [ \r\n        {key: 1, value: \"Test 1\"},\r\n        {key: 2, value: \"Test 2\"},\r\n        {key: 3, value: \"Test 3\"}\r\n    ]; */\r\n\r\n    const [selectedOption, setSelectedOption] = useState(\"\");\r\n    //const [selectedTopic, setSelectedTopic] = useState(\"\"); //new\r\n    const [items, setItems] = useState([]);\r\n\r\n\r\n    useEffect( () => {\r\n        fetchItems();\r\n    }, []);\r\n\r\n    \r\n\r\n    const fetchItems = async () => {\r\n        const data = await fetch('/courses');\r\n        const items = await data.json();\r\n        setItems(items);\r\n    };\r\n\r\n    const options = items.map(item => {\r\n        return {\r\n            key: item._id,\r\n            value: item.CourseID\r\n            //topic: item.topic_1, //new\r\n            //probability: item.probability_1 //new\r\n        }\r\n    });\r\n\r\n    //console.log(\"HELLO\")\r\n\r\n   /*  {\r\n        items.map(item => (\r\n            <div className=\"courses-map\">\r\n                <p>Course name: {item.CourseID}</p>\r\n                <p>Course id: {item.courseName}</p>\r\n                <p>Topic/Probability: {item.topic}</p>\r\n            </div>\r\n        ))\r\n        } */\r\n\r\n/*         <section>\r\n            <div> \r\n                <SelectComponent\r\n                    options = {options}\r\n                    onChange = {(item) => setSelectedOption(item)}\r\n                    selectedKey={selectedOption}\r\n                    placeholder={\"type to search\"}\r\n                />\r\n                <p className=\"sel-option\"> Selected option: {selectedOption}</p>\r\n            </div>\r\n            \r\n            test\r\n            {fetchItems.items}\r\n            \r\n            <div className=\"courses-map\">\r\n                <p>Course name: {options.CourseID}</p>\r\n                <p>Course id: {options.courseName}</p>\r\n                <p>Topic/Probability: {options.topic}</p>\r\n            </div>\r\n    \r\n            \r\n        </section>   */   \r\n        \r\n    \r\n\r\n    src=\"https://cdn.jsdelivr.net/npm/chart.js\"\r\n\r\n    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n    async function sleepyWork() {\r\n    console.log(\"I'm going to sleep for 1 second.\");\r\n    await sleep(1000);\r\n    console.log('I woke up after 1 second.');\r\n    pet = document.getElementById('pet-select').value;\r\n    console.log(\"Pet selected: \" + pet);\r\n    data[0] = 4;\r\n    chart.update();\r\n    }\r\n\r\n    const ctx = document.getElementById('myChart');\r\n    \r\n    const data = [20, 19, 3, 5, 2, 3];\r\n    \r\n    //sleepyWork(); // Test\r\n    \r\n    \r\n    \r\n\r\n    chart = new Chart(ctx, {\r\n        type: 'radar',\r\n        data: {\r\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n        datasets: [{\r\n            label: '# of Votes',\r\n            data: data,\r\n            borderWidth: 1\r\n        }]\r\n        },\r\n        options: {\r\n        responsive: true,\r\n        plugins: {\r\n            title: {\r\n            display: true,\r\n            text: 'Chart.js Radar Chart'\r\n        }\r\n        }\r\n        }\r\n    });\r\n   \r\n          \r\n    return(\r\n        <body>\r\n\r\n            MA SUPER PAGE WEB\r\n\r\n            <select id=\"pet-select\" onchange=\"sleepyWork()\">\r\n                <option value=\"\">--Please choose an option--</option>\r\n                <option value=\"dog\">Dog</option>\r\n                <option value=\"cat\">Cat</option>\r\n                <option value=\"hamster\">Hamster</option>\r\n                <option value=\"parrot\">Parrot</option>\r\n                <option value=\"spider\">Spider</option>\r\n                <option value=\"goldfish\">Goldfish</option>\r\n            </select>\r\n\r\n            <div>\r\n            <canvas id=\"myChart\"></canvas>\r\n            </div>\r\n        </body>    \r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Tweet;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}